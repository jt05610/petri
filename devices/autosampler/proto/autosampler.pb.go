// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: autosampler/proto/autosampler.proto

package autosampler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InjectState int32

const (
	InjectState_Idle      InjectState = 0
	InjectState_Injecting InjectState = 1
	InjectState_Injected  InjectState = 2
)

// Enum value maps for InjectState.
var (
	InjectState_name = map[int32]string{
		0: "Idle",
		1: "Injecting",
		2: "Injected",
	}
	InjectState_value = map[string]int32{
		"Idle":      0,
		"Injecting": 1,
		"Injected":  2,
	}
)

func (x InjectState) Enum() *InjectState {
	p := new(InjectState)
	*p = x
	return p
}

func (x InjectState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InjectState) Descriptor() protoreflect.EnumDescriptor {
	return file_autosampler_proto_autosampler_proto_enumTypes[0].Descriptor()
}

func (InjectState) Type() protoreflect.EnumType {
	return &file_autosampler_proto_autosampler_proto_enumTypes[0]
}

func (x InjectState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InjectState.Descriptor instead.
func (InjectState) EnumDescriptor() ([]byte, []int) {
	return file_autosampler_proto_autosampler_proto_rawDescGZIP(), []int{0}
}

type InjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vial            int32 `protobuf:"varint,1,opt,name=vial,proto3" json:"vial,omitempty"`
	AirCushion      int32 `protobuf:"varint,2,opt,name=air_cushion,json=airCushion,proto3" json:"air_cushion,omitempty"`
	ExcessVolume    int32 `protobuf:"varint,3,opt,name=excess_volume,json=excessVolume,proto3" json:"excess_volume,omitempty"`
	FlushVolume     int32 `protobuf:"varint,4,opt,name=flush_volume,json=flushVolume,proto3" json:"flush_volume,omitempty"`
	InjectionVolume int32 `protobuf:"varint,5,opt,name=injection_volume,json=injectionVolume,proto3" json:"injection_volume,omitempty"`
	NeedleDepth     int32 `protobuf:"varint,6,opt,name=needle_depth,json=needleDepth,proto3" json:"needle_depth,omitempty"`
}

func (x *InjectRequest) Reset() {
	*x = InjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autosampler_proto_autosampler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectRequest) ProtoMessage() {}

func (x *InjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autosampler_proto_autosampler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectRequest.ProtoReflect.Descriptor instead.
func (*InjectRequest) Descriptor() ([]byte, []int) {
	return file_autosampler_proto_autosampler_proto_rawDescGZIP(), []int{0}
}

func (x *InjectRequest) GetVial() int32 {
	if x != nil {
		return x.Vial
	}
	return 0
}

func (x *InjectRequest) GetAirCushion() int32 {
	if x != nil {
		return x.AirCushion
	}
	return 0
}

func (x *InjectRequest) GetExcessVolume() int32 {
	if x != nil {
		return x.ExcessVolume
	}
	return 0
}

func (x *InjectRequest) GetFlushVolume() int32 {
	if x != nil {
		return x.FlushVolume
	}
	return 0
}

func (x *InjectRequest) GetInjectionVolume() int32 {
	if x != nil {
		return x.InjectionVolume
	}
	return 0
}

func (x *InjectRequest) GetNeedleDepth() int32 {
	if x != nil {
		return x.NeedleDepth
	}
	return 0
}

type InjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State InjectState `protobuf:"varint,1,opt,name=state,proto3,enum=autosampler.InjectState" json:"state,omitempty"`
}

func (x *InjectResponse) Reset() {
	*x = InjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autosampler_proto_autosampler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectResponse) ProtoMessage() {}

func (x *InjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autosampler_proto_autosampler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectResponse.ProtoReflect.Descriptor instead.
func (*InjectResponse) Descriptor() ([]byte, []int) {
	return file_autosampler_proto_autosampler_proto_rawDescGZIP(), []int{1}
}

func (x *InjectResponse) GetState() InjectState {
	if x != nil {
		return x.State
	}
	return InjectState_Idle
}

var File_autosampler_proto_autosampler_proto protoreflect.FileDescriptor

var file_autosampler_proto_autosampler_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x72, 0x22, 0xda, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x5f,
	0x63, 0x75, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x69, 0x72, 0x43, 0x75, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x65, 0x64, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x22,
	0x40, 0x0a, 0x0e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x49,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2a, 0x34, 0x0a, 0x0b, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x02, 0x32, 0x52, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x06, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x49,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x74, 0x30, 0x35, 0x36, 0x31,
	0x30, 0x2f, 0x70, 0x65, 0x74, 0x72, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x61, 0x75, 0x74, 0x6f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_autosampler_proto_autosampler_proto_rawDescOnce sync.Once
	file_autosampler_proto_autosampler_proto_rawDescData = file_autosampler_proto_autosampler_proto_rawDesc
)

func file_autosampler_proto_autosampler_proto_rawDescGZIP() []byte {
	file_autosampler_proto_autosampler_proto_rawDescOnce.Do(func() {
		file_autosampler_proto_autosampler_proto_rawDescData = protoimpl.X.CompressGZIP(file_autosampler_proto_autosampler_proto_rawDescData)
	})
	return file_autosampler_proto_autosampler_proto_rawDescData
}

var file_autosampler_proto_autosampler_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_autosampler_proto_autosampler_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_autosampler_proto_autosampler_proto_goTypes = []interface{}{
	(InjectState)(0),       // 0: autosampler.InjectState
	(*InjectRequest)(nil),  // 1: autosampler.InjectRequest
	(*InjectResponse)(nil), // 2: autosampler.InjectResponse
}
var file_autosampler_proto_autosampler_proto_depIdxs = []int32{
	0, // 0: autosampler.InjectResponse.state:type_name -> autosampler.InjectState
	1, // 1: autosampler.Autosampler.Inject:input_type -> autosampler.InjectRequest
	2, // 2: autosampler.Autosampler.Inject:output_type -> autosampler.InjectResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_autosampler_proto_autosampler_proto_init() }
func file_autosampler_proto_autosampler_proto_init() {
	if File_autosampler_proto_autosampler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_autosampler_proto_autosampler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autosampler_proto_autosampler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_autosampler_proto_autosampler_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_autosampler_proto_autosampler_proto_goTypes,
		DependencyIndexes: file_autosampler_proto_autosampler_proto_depIdxs,
		EnumInfos:         file_autosampler_proto_autosampler_proto_enumTypes,
		MessageInfos:      file_autosampler_proto_autosampler_proto_msgTypes,
	}.Build()
	File_autosampler_proto_autosampler_proto = out.File
	file_autosampler_proto_autosampler_proto_rawDesc = nil
	file_autosampler_proto_autosampler_proto_goTypes = nil
	file_autosampler_proto_autosampler_proto_depIdxs = nil
}
