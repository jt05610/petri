version: "3.9"
services:

  db:
    image: postgres
    restart: always
    hostname: ${POSTGRES_HOST}
    ports:
      - "5532:5532"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - petri
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
      - ${POSTGRES_LOG_DIR}:/var/log/postgresql

  couchdb:
    image: couchdb:latest
    restart: always
    hostname: ${COUCHDB_HOST}
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ${COUCHDB_DATA_DIR}:/opt/couchdb/data
      - ${COUCHDB_LOG_DIR}:/opt/couchdb/log
      - ./couchdb/local.ini:/opt/couchdb/etc/local.ini
    networks:
      - petri

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    hostname: ${RABBITMQ_HOST}
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
    volumes:
      - rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - petri

  redis:
    image: redis:latest
    restart: always
    hostname: ${REDIS_HOST}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}
    ports:
      - "6379:6379"
    networks:
      - petri

  caddy:
    image: caddy:latest
    restart: always
    ports:
      - "80:80"
    environment:
      - OTTO_PORT=:${OTTO_PORT}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
    networks:
      - petri

  web:
    build: petri-ui
    ports:
      - "8088:8088"
    depends_on:
      - db

  daemon:
    build: .
    depends_on:
      - db
      - rabbitmq
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - .env

  otto:
    build:
      context: otto
      dockerfile: Dockerfile
    image: otto-image
    depends_on:
      - couchdb
      - rabbitmq
    env_file:
      - otto/secrets/.env
    ports:
      - ${OTTO_PORT}:80
    entrypoint:
      - python
      - -m
      - otto.gp.entrypoints.fastapi
    volumes:
      - ./otto/secrets:/app/src/secrets
    networks:
      - petri

networks:
  petri:
    driver: bridge