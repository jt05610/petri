// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: v1/axis/axis.proto

package axis

import (
	axis "core/axis/v1/axis"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	modbus "modbus/v1/modbus"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModbusAxis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Axis          *axis.Axis          `protobuf:"bytes,2,opt,name=axis,proto3" json:"axis,omitempty"`
	AxisId        string              `protobuf:"bytes,3,opt,name=axis_id,json=axisId,proto3" json:"axis_id,omitempty"`
	RegisterMap   *modbus.RegisterMap `protobuf:"bytes,4,opt,name=register_map,json=registerMap,proto3" json:"register_map,omitempty"`
	RegisterMapId string              `protobuf:"bytes,5,opt,name=register_map_id,json=registerMapId,proto3" json:"register_map_id,omitempty"`
}

func (x *ModbusAxis) Reset() {
	*x = ModbusAxis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModbusAxis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModbusAxis) ProtoMessage() {}

func (x *ModbusAxis) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModbusAxis.ProtoReflect.Descriptor instead.
func (*ModbusAxis) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{0}
}

func (x *ModbusAxis) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ModbusAxis) GetAxis() *axis.Axis {
	if x != nil {
		return x.Axis
	}
	return nil
}

func (x *ModbusAxis) GetAxisId() string {
	if x != nil {
		return x.AxisId
	}
	return ""
}

func (x *ModbusAxis) GetRegisterMap() *modbus.RegisterMap {
	if x != nil {
		return x.RegisterMap
	}
	return nil
}

func (x *ModbusAxis) GetRegisterMapId() string {
	if x != nil {
		return x.RegisterMapId
	}
	return ""
}

type GetAxisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAxisRequest) Reset() {
	*x = GetAxisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAxisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAxisRequest) ProtoMessage() {}

func (x *GetAxisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAxisRequest.ProtoReflect.Descriptor instead.
func (*GetAxisRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{1}
}

func (x *GetAxisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAxisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *GetAxisResponse) Reset() {
	*x = GetAxisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAxisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAxisResponse) ProtoMessage() {}

func (x *GetAxisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAxisResponse.ProtoReflect.Descriptor instead.
func (*GetAxisResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{2}
}

func (x *GetAxisResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

type ListAxisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*ModbusAxis `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *ListAxisResponse) Reset() {
	*x = ListAxisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAxisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAxisResponse) ProtoMessage() {}

func (x *ListAxisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAxisResponse.ProtoReflect.Descriptor instead.
func (*ListAxisResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{3}
}

func (x *ListAxisResponse) GetDevices() []*ModbusAxis {
	if x != nil {
		return x.Devices
	}
	return nil
}

type AddAxisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UnitId      int32               `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Calibration *axis.Calibration   `protobuf:"bytes,3,opt,name=calibration,proto3" json:"calibration,omitempty"`
	RegisterMap *modbus.RegisterMap `protobuf:"bytes,4,opt,name=register_map,json=registerMap,proto3" json:"register_map,omitempty"`
}

func (x *AddAxisRequest) Reset() {
	*x = AddAxisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAxisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAxisRequest) ProtoMessage() {}

func (x *AddAxisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAxisRequest.ProtoReflect.Descriptor instead.
func (*AddAxisRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{4}
}

func (x *AddAxisRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAxisRequest) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *AddAxisRequest) GetCalibration() *axis.Calibration {
	if x != nil {
		return x.Calibration
	}
	return nil
}

func (x *AddAxisRequest) GetRegisterMap() *modbus.RegisterMap {
	if x != nil {
		return x.RegisterMap
	}
	return nil
}

type AddAxisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *AddAxisResponse) Reset() {
	*x = AddAxisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAxisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAxisResponse) ProtoMessage() {}

func (x *AddAxisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAxisResponse.ProtoReflect.Descriptor instead.
func (*AddAxisResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{5}
}

func (x *AddAxisResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

type RemoveAxisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveAxisRequest) Reset() {
	*x = RemoveAxisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAxisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAxisRequest) ProtoMessage() {}

func (x *RemoveAxisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAxisRequest.ProtoReflect.Descriptor instead.
func (*RemoveAxisRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveAxisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveAxisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *RemoveAxisResponse) Reset() {
	*x = RemoveAxisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAxisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAxisResponse) ProtoMessage() {}

func (x *RemoveAxisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAxisResponse.ProtoReflect.Descriptor instead.
func (*RemoveAxisResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveAxisResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

type UpdateAxisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Calibration *axis.Calibration   `protobuf:"bytes,3,opt,name=calibration,proto3" json:"calibration,omitempty"`
	RegisterMap *modbus.RegisterMap `protobuf:"bytes,4,opt,name=register_map,json=registerMap,proto3" json:"register_map,omitempty"`
}

func (x *UpdateAxisRequest) Reset() {
	*x = UpdateAxisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAxisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAxisRequest) ProtoMessage() {}

func (x *UpdateAxisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAxisRequest.ProtoReflect.Descriptor instead.
func (*UpdateAxisRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAxisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAxisRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAxisRequest) GetCalibration() *axis.Calibration {
	if x != nil {
		return x.Calibration
	}
	return nil
}

func (x *UpdateAxisRequest) GetRegisterMap() *modbus.RegisterMap {
	if x != nil {
		return x.RegisterMap
	}
	return nil
}

type UpdateAxisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *UpdateAxisResponse) Reset() {
	*x = UpdateAxisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAxisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAxisResponse) ProtoMessage() {}

func (x *UpdateAxisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAxisResponse.ProtoReflect.Descriptor instead.
func (*UpdateAxisResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAxisResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

type UpdateNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateNameRequest) Reset() {
	*x = UpdateNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameRequest) ProtoMessage() {}

func (x *UpdateNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateNameRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *UpdateNameResponse) Reset() {
	*x = UpdateNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameResponse) ProtoMessage() {}

func (x *UpdateNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateNameResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateNameResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

type UpdateCalibrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Calibration *axis.Calibration `protobuf:"bytes,2,opt,name=calibration,proto3" json:"calibration,omitempty"`
}

func (x *UpdateCalibrationRequest) Reset() {
	*x = UpdateCalibrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalibrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalibrationRequest) ProtoMessage() {}

func (x *UpdateCalibrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalibrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateCalibrationRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCalibrationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCalibrationRequest) GetCalibration() *axis.Calibration {
	if x != nil {
		return x.Calibration
	}
	return nil
}

type UpdateCalibrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *UpdateCalibrationResponse) Reset() {
	*x = UpdateCalibrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalibrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalibrationResponse) ProtoMessage() {}

func (x *UpdateCalibrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalibrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateCalibrationResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateCalibrationResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

type UpdateRegMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RegisterMap *modbus.RegisterMap `protobuf:"bytes,2,opt,name=register_map,json=registerMap,proto3" json:"register_map,omitempty"`
}

func (x *UpdateRegMapRequest) Reset() {
	*x = UpdateRegMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegMapRequest) ProtoMessage() {}

func (x *UpdateRegMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegMapRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegMapRequest) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateRegMapRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRegMapRequest) GetRegisterMap() *modbus.RegisterMap {
	if x != nil {
		return x.RegisterMap
	}
	return nil
}

type UpdateRegMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *ModbusAxis `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *UpdateRegMapResponse) Reset() {
	*x = UpdateRegMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_axis_axis_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegMapResponse) ProtoMessage() {}

func (x *UpdateRegMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_axis_axis_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegMapResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegMapResponse) Descriptor() ([]byte, []int) {
	return file_v1_axis_axis_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRegMapResponse) GetDevice() *ModbusAxis {
	if x != nil {
		return x.Device
	}
	return nil
}

var File_v1_axis_axis_proto protoreflect.FileDescriptor

var file_v1_axis_axis_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x31, 0x2f, 0x61, 0x78, 0x69, 0x73, 0x2f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69,
	0x73, 0x1a, 0x16, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x62, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x78, 0x69, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x78, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41,
	0x78, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x78, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x52, 0x04, 0x61,
	0x78, 0x69, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x78, 0x69, 0x73, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78, 0x69, 0x73, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x45, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73,
	0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78, 0x69, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x22, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x78, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62,
	0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78,
	0x69, 0x73, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x55, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61,
	0x78, 0x69, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78, 0x69, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x43, 0x61, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f,
	0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70,
	0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x22, 0x55, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78, 0x69, 0x73, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x37, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78, 0x69, 0x73, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x5f, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x43, 0x61, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41, 0x78, 0x69, 0x73, 0x48, 0x00, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x22, 0x57, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64,
	0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x41,
	0x78, 0x69, 0x73, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x32, 0xf1, 0x04, 0x0a, 0x05,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x78, 0x69, 0x73,
	0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x78, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x78, 0x69, 0x73, 0x12, 0x0b, 0x2e, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78,
	0x69, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x41, 0x78, 0x69, 0x73, 0x12, 0x1b,
	0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x78, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f,
	0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x78, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x78, 0x69, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73,
	0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x78, 0x69, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73,
	0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x78, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x78, 0x69, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f,
	0x61, 0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f,
	0x61, 0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61,
	0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61,
	0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6d, 0x6f,
	0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x64,
	0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d,
	0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0e, 0x5a, 0x0c, 0x61, 0x78, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x78, 0x69, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_axis_axis_proto_rawDescOnce sync.Once
	file_v1_axis_axis_proto_rawDescData = file_v1_axis_axis_proto_rawDesc
)

func file_v1_axis_axis_proto_rawDescGZIP() []byte {
	file_v1_axis_axis_proto_rawDescOnce.Do(func() {
		file_v1_axis_axis_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_axis_axis_proto_rawDescData)
	})
	return file_v1_axis_axis_proto_rawDescData
}

var file_v1_axis_axis_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_v1_axis_axis_proto_goTypes = []interface{}{
	(*ModbusAxis)(nil),                // 0: modbus_axis.ModbusAxis
	(*GetAxisRequest)(nil),            // 1: modbus_axis.GetAxisRequest
	(*GetAxisResponse)(nil),           // 2: modbus_axis.GetAxisResponse
	(*ListAxisResponse)(nil),          // 3: modbus_axis.ListAxisResponse
	(*AddAxisRequest)(nil),            // 4: modbus_axis.AddAxisRequest
	(*AddAxisResponse)(nil),           // 5: modbus_axis.AddAxisResponse
	(*RemoveAxisRequest)(nil),         // 6: modbus_axis.RemoveAxisRequest
	(*RemoveAxisResponse)(nil),        // 7: modbus_axis.RemoveAxisResponse
	(*UpdateAxisRequest)(nil),         // 8: modbus_axis.UpdateAxisRequest
	(*UpdateAxisResponse)(nil),        // 9: modbus_axis.UpdateAxisResponse
	(*UpdateNameRequest)(nil),         // 10: modbus_axis.UpdateNameRequest
	(*UpdateNameResponse)(nil),        // 11: modbus_axis.UpdateNameResponse
	(*UpdateCalibrationRequest)(nil),  // 12: modbus_axis.UpdateCalibrationRequest
	(*UpdateCalibrationResponse)(nil), // 13: modbus_axis.UpdateCalibrationResponse
	(*UpdateRegMapRequest)(nil),       // 14: modbus_axis.UpdateRegMapRequest
	(*UpdateRegMapResponse)(nil),      // 15: modbus_axis.UpdateRegMapResponse
	(*axis.Axis)(nil),                 // 16: axis.Axis
	(*modbus.RegisterMap)(nil),        // 17: modbus.RegisterMap
	(*axis.Calibration)(nil),          // 18: axis.Calibration
	(*axis.Empty)(nil),                // 19: axis.Empty
}
var file_v1_axis_axis_proto_depIdxs = []int32{
	16, // 0: modbus_axis.ModbusAxis.axis:type_name -> axis.Axis
	17, // 1: modbus_axis.ModbusAxis.register_map:type_name -> modbus.RegisterMap
	0,  // 2: modbus_axis.GetAxisResponse.device:type_name -> modbus_axis.ModbusAxis
	0,  // 3: modbus_axis.ListAxisResponse.devices:type_name -> modbus_axis.ModbusAxis
	18, // 4: modbus_axis.AddAxisRequest.calibration:type_name -> axis.Calibration
	17, // 5: modbus_axis.AddAxisRequest.register_map:type_name -> modbus.RegisterMap
	0,  // 6: modbus_axis.AddAxisResponse.device:type_name -> modbus_axis.ModbusAxis
	0,  // 7: modbus_axis.RemoveAxisResponse.device:type_name -> modbus_axis.ModbusAxis
	18, // 8: modbus_axis.UpdateAxisRequest.calibration:type_name -> axis.Calibration
	17, // 9: modbus_axis.UpdateAxisRequest.register_map:type_name -> modbus.RegisterMap
	0,  // 10: modbus_axis.UpdateAxisResponse.device:type_name -> modbus_axis.ModbusAxis
	0,  // 11: modbus_axis.UpdateNameResponse.device:type_name -> modbus_axis.ModbusAxis
	18, // 12: modbus_axis.UpdateCalibrationRequest.calibration:type_name -> axis.Calibration
	0,  // 13: modbus_axis.UpdateCalibrationResponse.device:type_name -> modbus_axis.ModbusAxis
	17, // 14: modbus_axis.UpdateRegMapRequest.register_map:type_name -> modbus.RegisterMap
	0,  // 15: modbus_axis.UpdateRegMapResponse.device:type_name -> modbus_axis.ModbusAxis
	1,  // 16: modbus_axis.Store.GetAxis:input_type -> modbus_axis.GetAxisRequest
	19, // 17: modbus_axis.Store.ListAxis:input_type -> axis.Empty
	4,  // 18: modbus_axis.Store.AddAxis:input_type -> modbus_axis.AddAxisRequest
	6,  // 19: modbus_axis.Store.RemoveAxis:input_type -> modbus_axis.RemoveAxisRequest
	8,  // 20: modbus_axis.Store.UpdateAxis:input_type -> modbus_axis.UpdateAxisRequest
	10, // 21: modbus_axis.Store.UpdateName:input_type -> modbus_axis.UpdateNameRequest
	12, // 22: modbus_axis.Store.UpdateCalibration:input_type -> modbus_axis.UpdateCalibrationRequest
	14, // 23: modbus_axis.Store.UpdateRegMap:input_type -> modbus_axis.UpdateRegMapRequest
	2,  // 24: modbus_axis.Store.GetAxis:output_type -> modbus_axis.GetAxisResponse
	3,  // 25: modbus_axis.Store.ListAxis:output_type -> modbus_axis.ListAxisResponse
	5,  // 26: modbus_axis.Store.AddAxis:output_type -> modbus_axis.AddAxisResponse
	7,  // 27: modbus_axis.Store.RemoveAxis:output_type -> modbus_axis.RemoveAxisResponse
	9,  // 28: modbus_axis.Store.UpdateAxis:output_type -> modbus_axis.UpdateAxisResponse
	11, // 29: modbus_axis.Store.UpdateName:output_type -> modbus_axis.UpdateNameResponse
	13, // 30: modbus_axis.Store.UpdateCalibration:output_type -> modbus_axis.UpdateCalibrationResponse
	15, // 31: modbus_axis.Store.UpdateRegMap:output_type -> modbus_axis.UpdateRegMapResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_axis_axis_proto_init() }
func file_v1_axis_axis_proto_init() {
	if File_v1_axis_axis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_axis_axis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModbusAxis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAxisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAxisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAxisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAxisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAxisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAxisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAxisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAxisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAxisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalibrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalibrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_axis_axis_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_axis_axis_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_v1_axis_axis_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_v1_axis_axis_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_v1_axis_axis_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_v1_axis_axis_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_v1_axis_axis_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_v1_axis_axis_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_axis_axis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_axis_axis_proto_goTypes,
		DependencyIndexes: file_v1_axis_axis_proto_depIdxs,
		MessageInfos:      file_v1_axis_axis_proto_msgTypes,
	}.Build()
	File_v1_axis_axis_proto = out.File
	file_v1_axis_axis_proto_rawDesc = nil
	file_v1_axis_axis_proto_goTypes = nil
	file_v1_axis_axis_proto_depIdxs = nil
}
