// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: v1/modbus/modbus.proto

package modbus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Function Code 1 (Read Coils)
type ReadCoilsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId       uint32 `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`
	StartAddress uint32 `protobuf:"varint,2,opt,name=startAddress,proto3" json:"startAddress,omitempty"`
	Quantity     uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadCoilsRequest) Reset() {
	*x = ReadCoilsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCoilsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsRequest) ProtoMessage() {}

func (x *ReadCoilsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsRequest.ProtoReflect.Descriptor instead.
func (*ReadCoilsRequest) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{0}
}

func (x *ReadCoilsRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ReadCoilsRequest) GetStartAddress() uint32 {
	if x != nil {
		return x.StartAddress
	}
	return 0
}

func (x *ReadCoilsRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadCoilsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []bool `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadCoilsResponse) Reset() {
	*x = ReadCoilsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCoilsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsResponse) ProtoMessage() {}

func (x *ReadCoilsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsResponse.ProtoReflect.Descriptor instead.
func (*ReadCoilsResponse) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{1}
}

func (x *ReadCoilsResponse) GetData() []bool {
	if x != nil {
		return x.Data
	}
	return nil
}

// Function Code 2 (Read Discrete Inputs)
type ReadDiscreteInputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId       uint32 `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`
	StartAddress uint32 `protobuf:"varint,2,opt,name=startAddress,proto3" json:"startAddress,omitempty"`
	Quantity     uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadDiscreteInputsRequest) Reset() {
	*x = ReadDiscreteInputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDiscreteInputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsRequest) ProtoMessage() {}

func (x *ReadDiscreteInputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsRequest.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsRequest) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{2}
}

func (x *ReadDiscreteInputsRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ReadDiscreteInputsRequest) GetStartAddress() uint32 {
	if x != nil {
		return x.StartAddress
	}
	return 0
}

func (x *ReadDiscreteInputsRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadDiscreteInputsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []bool `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadDiscreteInputsResponse) Reset() {
	*x = ReadDiscreteInputsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDiscreteInputsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsResponse) ProtoMessage() {}

func (x *ReadDiscreteInputsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsResponse.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsResponse) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{3}
}

func (x *ReadDiscreteInputsResponse) GetData() []bool {
	if x != nil {
		return x.Data
	}
	return nil
}

// Function Code 3 (Read Holding Registers)
type ReadHoldingRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId       uint32 `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`
	StartAddress uint32 `protobuf:"varint,2,opt,name=startAddress,proto3" json:"startAddress,omitempty"`
	Quantity     uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadHoldingRegistersRequest) Reset() {
	*x = ReadHoldingRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHoldingRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersRequest) ProtoMessage() {}

func (x *ReadHoldingRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersRequest.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersRequest) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{4}
}

func (x *ReadHoldingRegistersRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ReadHoldingRegistersRequest) GetStartAddress() uint32 {
	if x != nil {
		return x.StartAddress
	}
	return 0
}

func (x *ReadHoldingRegistersRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadHoldingRegistersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadHoldingRegistersResponse) Reset() {
	*x = ReadHoldingRegistersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHoldingRegistersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersResponse) ProtoMessage() {}

func (x *ReadHoldingRegistersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersResponse.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersResponse) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{5}
}

func (x *ReadHoldingRegistersResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Function Code 4 (Read Input Registers)
type ReadInputRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId       uint32 `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`
	StartAddress uint32 `protobuf:"varint,2,opt,name=startAddress,proto3" json:"startAddress,omitempty"`
	Quantity     uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadInputRegistersRequest) Reset() {
	*x = ReadInputRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInputRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersRequest) ProtoMessage() {}

func (x *ReadInputRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersRequest.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersRequest) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{6}
}

func (x *ReadInputRegistersRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ReadInputRegistersRequest) GetStartAddress() uint32 {
	if x != nil {
		return x.StartAddress
	}
	return 0
}

func (x *ReadInputRegistersRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadInputRegistersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadInputRegistersResponse) Reset() {
	*x = ReadInputRegistersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInputRegistersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersResponse) ProtoMessage() {}

func (x *ReadInputRegistersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersResponse.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersResponse) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{7}
}

func (x *ReadInputRegistersResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Function Code 5 (Write Single Coil)
type WriteSingleCoilRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  uint32 `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Value   bool   `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteSingleCoilRequest) Reset() {
	*x = WriteSingleCoilRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSingleCoilRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleCoilRequest) ProtoMessage() {}

func (x *WriteSingleCoilRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleCoilRequest.ProtoReflect.Descriptor instead.
func (*WriteSingleCoilRequest) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{8}
}

func (x *WriteSingleCoilRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *WriteSingleCoilRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleCoilRequest) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type WriteSingleCoilResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address uint32 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Value   bool   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteSingleCoilResponse) Reset() {
	*x = WriteSingleCoilResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSingleCoilResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleCoilResponse) ProtoMessage() {}

func (x *WriteSingleCoilResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleCoilResponse.ProtoReflect.Descriptor instead.
func (*WriteSingleCoilResponse) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{9}
}

func (x *WriteSingleCoilResponse) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleCoilResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// Function Code 6 (Write Single Register)
type WriteSingleRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  uint32 `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Value   uint32 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteSingleRegisterRequest) Reset() {
	*x = WriteSingleRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSingleRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleRegisterRequest) ProtoMessage() {}

func (x *WriteSingleRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleRegisterRequest.ProtoReflect.Descriptor instead.
func (*WriteSingleRegisterRequest) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{10}
}

func (x *WriteSingleRegisterRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *WriteSingleRegisterRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleRegisterRequest) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WriteSingleRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address uint32 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Value   uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteSingleRegisterResponse) Reset() {
	*x = WriteSingleRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSingleRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleRegisterResponse) ProtoMessage() {}

func (x *WriteSingleRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleRegisterResponse.ProtoReflect.Descriptor instead.
func (*WriteSingleRegisterResponse) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{11}
}

func (x *WriteSingleRegisterResponse) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleRegisterResponse) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type InputRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterMapId string `protobuf:"bytes,1,opt,name=register_map_id,json=registerMapId,proto3" json:"register_map_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       uint32 `protobuf:"varint,3,opt,name=address,proto3" json:"address,omitempty"`
	Size          uint32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *InputRegister) Reset() {
	*x = InputRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputRegister) ProtoMessage() {}

func (x *InputRegister) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputRegister.ProtoReflect.Descriptor instead.
func (*InputRegister) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{12}
}

func (x *InputRegister) GetRegisterMapId() string {
	if x != nil {
		return x.RegisterMapId
	}
	return ""
}

func (x *InputRegister) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputRegister) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *InputRegister) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type HoldingRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterMapId string `protobuf:"bytes,1,opt,name=register_map_id,json=registerMapId,proto3" json:"register_map_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       uint32 `protobuf:"varint,3,opt,name=address,proto3" json:"address,omitempty"`
	Size          uint32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *HoldingRegister) Reset() {
	*x = HoldingRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HoldingRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldingRegister) ProtoMessage() {}

func (x *HoldingRegister) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldingRegister.ProtoReflect.Descriptor instead.
func (*HoldingRegister) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{13}
}

func (x *HoldingRegister) GetRegisterMapId() string {
	if x != nil {
		return x.RegisterMapId
	}
	return ""
}

func (x *HoldingRegister) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HoldingRegister) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *HoldingRegister) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Coil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterMapId string `protobuf:"bytes,1,opt,name=register_map_id,json=registerMapId,proto3" json:"register_map_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       uint32 `protobuf:"varint,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Coil) Reset() {
	*x = Coil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coil) ProtoMessage() {}

func (x *Coil) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coil.ProtoReflect.Descriptor instead.
func (*Coil) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{14}
}

func (x *Coil) GetRegisterMapId() string {
	if x != nil {
		return x.RegisterMapId
	}
	return ""
}

func (x *Coil) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coil) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

type DiscreteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterMapId string `protobuf:"bytes,1,opt,name=register_map_id,json=registerMapId,proto3" json:"register_map_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       uint32 `protobuf:"varint,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DiscreteInput) Reset() {
	*x = DiscreteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscreteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscreteInput) ProtoMessage() {}

func (x *DiscreteInput) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscreteInput.ProtoReflect.Descriptor instead.
func (*DiscreteInput) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{15}
}

func (x *DiscreteInput) GetRegisterMapId() string {
	if x != nil {
		return x.RegisterMapId
	}
	return ""
}

func (x *DiscreteInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscreteInput) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

type RegisterMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InputRegisters   []*InputRegister   `protobuf:"bytes,2,rep,name=input_registers,json=inputRegisters,proto3" json:"input_registers,omitempty"`
	HoldingRegisters []*HoldingRegister `protobuf:"bytes,3,rep,name=holding_registers,json=holdingRegisters,proto3" json:"holding_registers,omitempty"`
	Coils            []*Coil            `protobuf:"bytes,4,rep,name=coils,proto3" json:"coils,omitempty"`
	DiscreteInputs   []*DiscreteInput   `protobuf:"bytes,5,rep,name=discrete_inputs,json=discreteInputs,proto3" json:"discrete_inputs,omitempty"`
}

func (x *RegisterMap) Reset() {
	*x = RegisterMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_modbus_modbus_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMap) ProtoMessage() {}

func (x *RegisterMap) ProtoReflect() protoreflect.Message {
	mi := &file_v1_modbus_modbus_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMap.ProtoReflect.Descriptor instead.
func (*RegisterMap) Descriptor() ([]byte, []int) {
	return file_v1_modbus_modbus_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterMap) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterMap) GetInputRegisters() []*InputRegister {
	if x != nil {
		return x.InputRegisters
	}
	return nil
}

func (x *RegisterMap) GetHoldingRegisters() []*HoldingRegister {
	if x != nil {
		return x.HoldingRegisters
	}
	return nil
}

func (x *RegisterMap) GetCoils() []*Coil {
	if x != nil {
		return x.Coils
	}
	return nil
}

func (x *RegisterMap) GetDiscreteInputs() []*DiscreteInput {
	if x != nil {
		return x.DiscreteInputs
	}
	return nil
}

var File_v1_modbus_modbus_proto protoreflect.FileDescriptor

var file_v1_modbus_modbus_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x62,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73,
	0x22, 0x6a, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x27, 0x0a, 0x11,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x1a, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x1b,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x1c, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x1a,
	0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x60,
	0x0a, 0x16, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x49, 0x0a, 0x17, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x1a, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x4d, 0x0a, 0x1b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x79, 0x0a, 0x0d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x7b, 0x0a, 0x0f, 0x48,
	0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x5c, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6c,
	0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x65, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x87, 0x02,
	0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a,
	0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a,
	0x11, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75,
	0x73, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x10, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6c,
	0x52, 0x05, 0x63, 0x6f, 0x69, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x72,
	0x65, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x32, 0xa7, 0x04, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x62,
	0x75, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x12,
	0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x62,
	0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69,
	0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x6d,
	0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e,
	0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x52, 0x65,
	0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6c, 0x12, 0x1e, 0x2e, 0x6d,
	0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d,
	0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x64,
	0x62, 0x75, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x12, 0x5a, 0x10, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x6f, 0x64, 0x62, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_modbus_modbus_proto_rawDescOnce sync.Once
	file_v1_modbus_modbus_proto_rawDescData = file_v1_modbus_modbus_proto_rawDesc
)

func file_v1_modbus_modbus_proto_rawDescGZIP() []byte {
	file_v1_modbus_modbus_proto_rawDescOnce.Do(func() {
		file_v1_modbus_modbus_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_modbus_modbus_proto_rawDescData)
	})
	return file_v1_modbus_modbus_proto_rawDescData
}

var file_v1_modbus_modbus_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_v1_modbus_modbus_proto_goTypes = []interface{}{
	(*ReadCoilsRequest)(nil),             // 0: modbus.ReadCoilsRequest
	(*ReadCoilsResponse)(nil),            // 1: modbus.ReadCoilsResponse
	(*ReadDiscreteInputsRequest)(nil),    // 2: modbus.ReadDiscreteInputsRequest
	(*ReadDiscreteInputsResponse)(nil),   // 3: modbus.ReadDiscreteInputsResponse
	(*ReadHoldingRegistersRequest)(nil),  // 4: modbus.ReadHoldingRegistersRequest
	(*ReadHoldingRegistersResponse)(nil), // 5: modbus.ReadHoldingRegistersResponse
	(*ReadInputRegistersRequest)(nil),    // 6: modbus.ReadInputRegistersRequest
	(*ReadInputRegistersResponse)(nil),   // 7: modbus.ReadInputRegistersResponse
	(*WriteSingleCoilRequest)(nil),       // 8: modbus.WriteSingleCoilRequest
	(*WriteSingleCoilResponse)(nil),      // 9: modbus.WriteSingleCoilResponse
	(*WriteSingleRegisterRequest)(nil),   // 10: modbus.WriteSingleRegisterRequest
	(*WriteSingleRegisterResponse)(nil),  // 11: modbus.WriteSingleRegisterResponse
	(*InputRegister)(nil),                // 12: modbus.InputRegister
	(*HoldingRegister)(nil),              // 13: modbus.HoldingRegister
	(*Coil)(nil),                         // 14: modbus.Coil
	(*DiscreteInput)(nil),                // 15: modbus.DiscreteInput
	(*RegisterMap)(nil),                  // 16: modbus.RegisterMap
}
var file_v1_modbus_modbus_proto_depIdxs = []int32{
	12, // 0: modbus.RegisterMap.input_registers:type_name -> modbus.InputRegister
	13, // 1: modbus.RegisterMap.holding_registers:type_name -> modbus.HoldingRegister
	14, // 2: modbus.RegisterMap.coils:type_name -> modbus.Coil
	15, // 3: modbus.RegisterMap.discrete_inputs:type_name -> modbus.DiscreteInput
	0,  // 4: modbus.Modbus.ReadCoils:input_type -> modbus.ReadCoilsRequest
	2,  // 5: modbus.Modbus.ReadDiscreteInputs:input_type -> modbus.ReadDiscreteInputsRequest
	4,  // 6: modbus.Modbus.ReadHoldingRegisters:input_type -> modbus.ReadHoldingRegistersRequest
	6,  // 7: modbus.Modbus.ReadInputRegisters:input_type -> modbus.ReadInputRegistersRequest
	8,  // 8: modbus.Modbus.WriteSingleCoil:input_type -> modbus.WriteSingleCoilRequest
	10, // 9: modbus.Modbus.WriteSingleRegister:input_type -> modbus.WriteSingleRegisterRequest
	1,  // 10: modbus.Modbus.ReadCoils:output_type -> modbus.ReadCoilsResponse
	3,  // 11: modbus.Modbus.ReadDiscreteInputs:output_type -> modbus.ReadDiscreteInputsResponse
	5,  // 12: modbus.Modbus.ReadHoldingRegisters:output_type -> modbus.ReadHoldingRegistersResponse
	7,  // 13: modbus.Modbus.ReadInputRegisters:output_type -> modbus.ReadInputRegistersResponse
	9,  // 14: modbus.Modbus.WriteSingleCoil:output_type -> modbus.WriteSingleCoilResponse
	11, // 15: modbus.Modbus.WriteSingleRegister:output_type -> modbus.WriteSingleRegisterResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_v1_modbus_modbus_proto_init() }
func file_v1_modbus_modbus_proto_init() {
	if File_v1_modbus_modbus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_modbus_modbus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCoilsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCoilsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDiscreteInputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDiscreteInputsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHoldingRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHoldingRegistersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadInputRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadInputRegistersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSingleCoilRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSingleCoilResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSingleRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSingleRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HoldingRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscreteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_modbus_modbus_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_modbus_modbus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_modbus_modbus_proto_goTypes,
		DependencyIndexes: file_v1_modbus_modbus_proto_depIdxs,
		MessageInfos:      file_v1_modbus_modbus_proto_msgTypes,
	}.Build()
	File_v1_modbus_modbus_proto = out.File
	file_v1_modbus_modbus_proto_rawDesc = nil
	file_v1_modbus_modbus_proto_goTypes = nil
	file_v1_modbus_modbus_proto_depIdxs = nil
}
