package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"context"
	"encoding/json"

	"github.com/jt05610/petri"
	"github.com/jt05610/petri/graph/generated"
	model1 "github.com/jt05610/petri/resolver/model"
)

// Properties is the resolver for the properties field.
func (r *tokenSchemaResolver) Properties(ctx context.Context, obj *petri.TokenSchema) (model1.JSON, error) {
	return obj.PropertiesJSON(), nil
}

// Properties is the resolver for the properties field.
func (r *tokenSchemaInputResolver) Properties(ctx context.Context, obj *petri.TokenSchemaInput, data model1.JSON) error {
	dataBytes, err := json.Marshal(data)
	if err != nil {
		return err
	}
	return json.Unmarshal(dataBytes, &obj.Properties)
}

// Properties is the resolver for the properties field.
func (r *tokenUpdateInputResolver) Properties(ctx context.Context, obj *petri.TokenUpdate, data model1.JSON) error {
	dataBytes, err := json.Marshal(data)
	if err != nil {
		return err
	}
	return json.Unmarshal(dataBytes, &obj.Properties)
}

// TokenSchema returns generated.TokenSchemaResolver implementation.
func (r *Resolver) TokenSchema() generated.TokenSchemaResolver { return &tokenSchemaResolver{r} }

// TokenSchemaInput returns generated.TokenSchemaInputResolver implementation.
func (r *Resolver) TokenSchemaInput() generated.TokenSchemaInputResolver {
	return &tokenSchemaInputResolver{r}
}

// TokenUpdateInput returns generated.TokenUpdateInputResolver implementation.
func (r *Resolver) TokenUpdateInput() generated.TokenUpdateInputResolver {
	return &tokenUpdateInputResolver{r}
}

type tokenSchemaResolver struct{ *Resolver }
type tokenSchemaInputResolver struct{ *Resolver }
type tokenUpdateInputResolver struct{ *Resolver }
